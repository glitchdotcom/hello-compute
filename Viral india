Instagram-like Basic Web App using Flask (Python)

Features: Signup, Login, Post Image with Caption, Feed

from flask import Flask, render_template, request, redirect, session, url_for from werkzeug.utils import secure_filename import os

app = Flask(name) app.secret_key = 'secret-key' UPLOAD_FOLDER = 'static/uploads' os.makedirs(UPLOAD_FOLDER, exist_ok=True) app.config['UPLOAD_FOLDER'] = UPLOAD_FOLDER

In-memory 'database'

users = {}  # username: password posts = []  # list of {user, image_path, caption}

@app.route('/') def home(): if 'username' in session: return render_template('feed.html', posts=posts[::-1], user=session['username']) return redirect('/login')

@app.route('/signup', methods=['GET', 'POST']) def signup(): if request.method == 'POST': username = request.form['username'] password = request.form['password'] if username in users: return 'User already exists!' users[username] = password return redirect('/login') return render_template('signup.html')

@app.route('/login', methods=['GET', 'POST']) def login(): if request.method == 'POST': username = request.form['username'] password = request.form['password'] if users.get(username) == password: session['username'] = username return redirect('/') return 'Invalid credentials!' return render_template('login.html')

@app.route('/logout') def logout(): session.pop('username', None) return redirect('/login')

@app.route('/post', methods=['GET', 'POST']) def post(): if 'username' not in session: return redirect('/login') if request.method == 'POST': caption = request.form['caption'] image = request.files['image'] if image: filename = secure_filename(image.filename) filepath = os.path.join(app.config['UPLOAD_FOLDER'], filename) image.save(filepath) posts.append({ 'user': session['username'], 'image_path': filepath, 'caption': caption }) return redirect('/') return render_template('post.html')

if name == 'main': app.run(debug=True)

